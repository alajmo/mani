# IMPORTS

import:
  - ./imports/projects.yaml
  - ./imports/tasks.yaml
  - ./imports/targets.yaml
  - ./imports/specs.yaml

# PROJECTS
projects:
  # example:
  #   path: .

  tap-report:
    path: frontend/tap-report
    url: https://github.com/alajmo/tap-report
    # url: git+ssh://git@github.com/alajmo/dashgrid.git
    desc: A tap report theme
    tags: ["frontend", "software"]
    env:
      BRANCH: main

  # dashgrid:
  #   path: frontend/dashgrid
  #   url: git+ssh://git@github.com/alajmo/dashgrid.git
  #   # clone: git clone git@github.com:alajmo/dashgrid # default
  #   desc: A highly customizable drag-and-drop grid
  #   tags: [frontend, kaka]
  #   env:
  #     FOO: bar

  # template-generator:
  #   url: git@github.com:alajmo/template-generator
  #   desc: A simple bash script used to manage boilerplates
  #   tags: [cli, bash]

# GLOBAL ENVS
env:
  VERSION: v0.1.0
  GIT: git --no-pager
  DATE: $(date -u +"%Y-%m-%dT%H:%M:%S%Z")

# TASKS
tasks:
  test:
    desc: simple test task
    target: single-project
    spec:
      # omit_empty: lala
      # parallel: hej
    # commands:
    #   - task: damn
    cmd: echo "hello world"

  git-status: git status

  echo:
    desc: Print hello world
    cmd: echo "hello world"
    spec: advanced
    # spec: lala
    # spec: lala

  ping:
    desc: ping server
    cmd: echo pong

  sleep:
    desc: Sleep 5 seconds
    cmd: sleep 5

  status:
    desc: git status
    target: single-project
    spec:
      output: text
    commands:
      - mcd: git status
      - cmd: git branch
    cmd: echo done

  text:
    desc: test text info
    env:
      BRANCH: lala
      FOO: bar
    target: single-project
    spec:
      output: text
    commands:
      - task: echo
      - cmd: echo lala
      # - task: troll
    cmd: echo hi

  table:
    env:
      BRANCH: lala
      FOO: bar
    target: single-project
    spec:
      output: table
    commands:
      - task: echo
      - cmd: echo lala
    cmd: echo hi

  install:
    desc: npm install
    cmd: npm install

  fail:
    desc: fail on purpose
    cmd: |
      echo "FAILED"
      exit 1

  node:
    target: all
    shell: node
    cmd: console.log("Running node.js example")

  random-data:
    desc: generate random data
    cmd: |
      jot -r 1
      echo "RANDOM-DATA"
      jot -r 2
      sleep 2
      jot -r 2
      sleep 2

  many:
    desc: run many tasks
    env:
      BRANCH: lala
      HELLO: WORLD
    target: all
    spec: advanced

    commands:
      - task: node
      - task: echo
      - task: random-data
      - task: ping

    cmd: echo "DONE"
